SELECT T.NAZIV, COUNT(POL)
FROM ATLETICAR_TAKMICENJE, TAKMICENJE T, ATLETICAR
WHERE ATLETICAR_TAKMICENJE.ATLETICAR_ID = ATLETICAR.ID AND ATLETICAR_TAKMICENJE.TAKMICENJE_ID = TAKMICENJE.ID
WHERE (SELECT COUNT(*)
        FROM ATLETICAR_TAKMICENJE, TAKMICENJE, ATLETICAR
        WHERE ATLETICAR_TAKMICENJE.ATLETICAR_ID = ATLETICAR.ID AND ATLETICAR_TAKMICENJE.TAKMICENJE_ID = TAKMICENJE.ID AND POL = 'Z'
GROUP BY POL) > 10
GROUP BY T.NAZIV, POL


SELECT DISTINCT TAKMICENJE.NAZIV,ATLETICAR.POL, COUNT(POL)
FROM ATLETICAR_TAKMICENJE, TAKMICENJE, ATLETICAR
WHERE ATLETICAR_TAKMICENJE.ATLETICAR_ID = ATLETICAR.ID AND ATLETICAR_TAKMICENJE.TAKMICENJE_ID = TAKMICENJE.ID
AND TAKMICENJE.ID IN 
(
    SELECT ID
    FROM
    (
        SELECT TAKMICENJE.ID, COUNT(*)
    FROM ATLETICAR_TAKMICENJE, TAKMICENJE, ATLETICAR
    WHERE ATLETICAR_TAKMICENJE.ATLETICAR_ID = ATLETICAR.ID AND ATLETICAR_TAKMICENJE.TAKMICENJE_ID = TAKMICENJE.ID AND ATLETICAR.POL = 'Z'
    GROUP BY TAKMICENJE.ID,ATLETICAR.POL
    HAVING COUNT(POL) > 10
    )
)
GROUP BY TAKMICENJE.NAZIV, ATLETICAR.POL
ORDER BY TAKMICENJE.NAZIV DESC;

CREATE TABLE ATLETICAR
(
    ID NUMBER PRIMARY KEY,
    IME VARCHAR(30),
    PREZIME VARCHAR(30),
    NAPOMENA VARCHAR(100),
    POL CHAR(1) CHECK(POL IN ('M', 'Z')),
    GOD_RODJ DATE
);

CREATE TABLE TAKMICENJE
(
    ID NUMBER PRIMARY KEY,
    DATUM DATE,
    NAZIV VARCHAR(30),
    DUZINA NUMBER
);

CREATE TABLE ATLETICAR_TAKMICENJE
(
    ATLETICAR_ID NUMBER REFERENCES ATLETICAR(ID),
    TAKMICENJE_ID NUMBER REFERENCES TAKMICENJE(ID)
);

INSERT INTO ATLETICAR_TAKMICENJE VALUES (1,1);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (2,1);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (3,1);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (4,2);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (5,2);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (6,1);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (7,1);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (8,1);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (9,3);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (10,3);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (11,3);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (12,3);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (13,3);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (14,1);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (15,1);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (16,1);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (17,1);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (18,1);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (19,4);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (20,4);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (21,3);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (22,3);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (23,3);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (24,3);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (25,2);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (26,1);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (27,2);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (28,1);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (29,1);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (30,1);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (31,1);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (32,4);
INSERT INTO ATLETICAR_TAKMICENJE VALUES (33,4);


INSERT INTO TAKMICENJE VALUES(1,NULL, 'Plivanje', NULL);
INSERT INTO TAKMICENJE VALUES(1,NULL, 'Skakanje', NULL);
INSERT INTO TAKMICENJE VALUES(1,NULL, 'Trcanje', NULL);
INSERT INTO TAKMICENJE VALUES(1,NULL, 'Ronjenje', NULL);


INSERT INTO ATLETICAR VALUES('Milica1',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Milica2',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Milica3',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Milica4',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Milica5',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Marko1',NULL,NULL,'M',NULL);
INSERT INTO ATLETICAR VALUES('Marko2',NULL,NULL,'M',NULL);
INSERT INTO ATLETICAR VALUES('Marko3',NULL,NULL,'M',NULL);
INSERT INTO ATLETICAR VALUES('Milica6',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Milica7',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Milica8',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Marko4',NULL,NULL,'M',NULL);
INSERT INTO ATLETICAR VALUES('Marko5',NULL,NULL,'M',NULL);
INSERT INTO ATLETICAR VALUES('Milica9',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Milica10',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Milica11',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Milica12',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Milica13',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Marko6',NULL,NULL,'M',NULL);
INSERT INTO ATLETICAR VALUES('Marko7',NULL,NULL,'M',NULL);
INSERT INTO ATLETICAR VALUES('Milica14',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Milica15',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Milica16',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Milica17',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Marko8',NULL,NULL,'M',NULL);
INSERT INTO ATLETICAR VALUES('Marko9',NULL,NULL,'M',NULL);
INSERT INTO ATLETICAR VALUES('Marko10',NULL,NULL,'M',NULL);
INSERT INTO ATLETICAR VALUES('Marko11',NULL,NULL,'M',NULL);
INSERT INTO ATLETICAR VALUES('Milica18',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Milica19',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Milica20',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Milica21',NULL,NULL,'Z',NULL);
INSERT INTO ATLETICAR VALUES('Milica22',NULL,NULL,'Z',NULL);


SELECT TAKMICENJE.ID, ATLETICAR.ID, COUNT(*)
FROM ATLETICAR, TAKMICENJE, ATLETICAR_TAKMICENJE
WHERE ATLETICAR_TAKMICENJE.ATLETICAR_ID = ATLETICAR.ID AND ATLETICAR_TAKMICENJE.TAKMICENJE_ID = TAKMICENJE.ID
GROUP BY TAKMICENJE.ID, ATLETICAR.ID

SELECT * FROM ATLETICAR WHERE ATLETICAR.ID IN
(SELECT ID FROM (SELECT ATLETICAR.ID, COUNT(*)
FROM ATLETICAR, TAKMICENJE, ATLETICAR_TAKMICENJE
WHERE ATLETICAR_TAKMICENJE.ATLETICAR_ID = ATLETICAR.ID AND ATLETICAR_TAKMICENJE.TAKMICENJE_ID = TAKMICENJE.ID
GROUP BY ATLETICAR.ID
HAVING COUNT(*) > 3))
MINUS
SELECT * FROM ATLETICAR WHERE ATLETICAR.ID IN
(SELECT ID FROM
(SELECT ATLETICAR.ID FROM ATLETICAR, TAKMICENJE, ATLETICAR_TAKMICENJE
WHERE ATLETICAR_TAKMICENJE.ATLETICAR_ID = ATLETICAR.ID AND ATLETICAR_TAKMICENJE.TAKMICENJE_ID = TAKMICENJE.ID AND TAKMICENJE.DUZINA < 1000))

SELECT MIN(COUNT(*)) FROM(SELECT TAKMICENJE.ID, COUNT(*)
FROM TAKMICENJE, ATLETICAR, ATLETICAR_TAKMICENJE
WHERE TAKMICENJE.ID = ATLETICAR_TAKMICENJE.TAKMICENJE_ID AND ATLETICAR_TAKMICENJE.ATLETICAR_ID = ATLETICAR.ID
GROUP BY TAKMICENJE.ID)



SELECT TAKMICENJE.NAZIV, COUNT(*)
FROM TAKMICENJE, ATLETICAR, ATLETICAR_TAKMICENJE
WHERE TAKMICENJE.ID = ATLETICAR_TAKMICENJE.TAKMICENJE_ID AND ATLETICAR_TAKMICENJE.ATLETICAR_ID = ATLETICAR.ID
GROUP BY TAKMICENJE.NAZIV
HAVING COUNT(*) = (SELECT MIN(COUNT(*))
FROM TAKMICENJE, ATLETICAR, ATLETICAR_TAKMICENJE
WHERE TAKMICENJE.ID = ATLETICAR_TAKMICENJE.TAKMICENJE_ID AND ATLETICAR_TAKMICENJE.ATLETICAR_ID = ATLETICAR.ID
GROUP BY TAKMICENJE.ID)


SELECT T.NAZIV
FROM TAKMICENJE T JOIN ATLETICAR_TAKMICENJE AT ON AT.TAKMICENJE_ID = T.ID
GROUP BY T.ID
HAVING COUNT(AT.ATLETICAR_ID) = 
(
    SELECT MIN(COUNT(AT.ID))
    FROM ATLETICAR_TAKMICENJE AT
    GROUP BY AT.TAKMICENJE_ID
)


SELECT T.NAZIV, A.POL, COUNT(T.ID)
FROM TAKMICENJE T JOIN ATLETICAR_TAKMICENJE AT ON AT.TAKMICENJE_ID = T.ID JOIN ATLETICAR A ON A.ID = AT.ATLETICAR_ID
WHERE T.ID IN
(
    SELECT ATLETICAR_TAKMICENJE AT JOIN ATLETICAR A ON AT.ATLETICAR_ID = A.ID
    WHERE A.POL = 'Z'
    GROUP BY AT.TAKMICENJE_ID
    HAVING COUNT(A.ID) > 10
)
GROUP BY T.ID, A.POL;

SELECT DISTINCT TAKMICENJE.NAZIV,ATLETICAR.POL, COUNT(POL)
FROM ATLETICAR_TAKMICENJE, TAKMICENJE, ATLETICAR
WHERE ATLETICAR_TAKMICENJE.ATLETICAR_ID = ATLETICAR.ID AND ATLETICAR_TAKMICENJE.TAKMICENJE_ID = TAKMICENJE.ID
AND TAKMICENJE.ID IN 
(
    SELECT ID
    FROM
    (
        SELECT TAKMICENJE.ID, COUNT(*)
    FROM ATLETICAR_TAKMICENJE, TAKMICENJE, ATLETICAR
    WHERE ATLETICAR_TAKMICENJE.ATLETICAR_ID = ATLETICAR.ID AND ATLETICAR_TAKMICENJE.TAKMICENJE_ID = TAKMICENJE.ID AND ATLETICAR.POL = 'Z'
    GROUP BY TAKMICENJE.ID,ATLETICAR.POL
    HAVING COUNT(POL) > 10
    )
)
GROUP BY TAKMICENJE.NAZIV, ATLETICAR.POL
ORDER BY TAKMICENJE.NAZIV DESC;


SELECT A.IME
FROM ATLETICAR A JOIN ATLETICAR_TAKMICENJE AT ON AT.ATLETICAR_ID = A.ID
GROUP BY A.ID, A.IME
HAVING COUNT(AT.TAKMICENJE_ID) > 4
MINUS
SELECT A.IME
FROM ATLETICAR A JOIN ATLETICAR_TAKMICENJE AT ON AT.ATLETICAR_ID = A.ID JOIN TAKMICENJE T ON T.ID = AT.TAKMICENJE_ID
WHERE T.DUZINA < 1000


SELECT T.NAZIV
FROM TAKMICENJE T JOIN ATLETICAR_TAKMICENJE AT ON AT.TAKMICENJE_ID = T.ID
GROUP BY T.ID
HAVING COUNT(AT.ATLETICAR_ID) = 
(
    SELECT MIN(COUNT(AT.ID))
    FROM ATLETICAR_TAKMICENJE AT
    GROUP BY AT.TAKMICENJE_ID
)




























--=================================================================================================================================

--JUN 2023

CREATE TABLE SEKTOR(
    ID NUMBER PRIMARY KEY,
    NAZIV VARCHAR(30),
    LOKACIJA VARCHAR(30) CHECK LOKACIJA IN ("Nis", "Novi Sad", "Kragujevac")
);

CREATE TABLE ZAPOSLENI(
    ID NUMBER PRIMARY KEY,
    IME VARCHAR(30),
    PREZIME VARCHAR(30),
    TELEFON VARCHAR(10),
    ADRESA VARCHAR(100),
    GOD_RODJENJA DATE,
    STRUCNA_SPREMA VARCHAR(20) NOT NULL
);

CREATE TABLE POZICIJA(
    ZAPOSLENI_ID NUMBER REFERENCES ZAPOSLENI(ID),
    SEKTOR_ID NUMBER REFERENCES SEKTOR(ID),
    DATUM_POC DATE,
    DATUM_KRAJA DATE DEFAULT NULL,
    NAZIV VARHCAR(30),
    PLATA NUMBER,
    CONSTRAINT POZICIJA_PK PRIMARY KEY (ZAPOSLENI_ID, SEKTOR_ID, DATUM_POC)
);

SELECT POZICIJA.NAZIV, POZICIJA.SEKTOR_ID, AVG(PLATA), SUM(DATUM_KRAJA - DATUM_POC)
FROM POZICIJA
WHERE DATUM_KRAJA IS NOT NULL
GROUP BY POZICIJA.NAZIV, POZICIJA.SEKTOR_ID

--ILI

SELECT POZICIJA.NAZIV, AVG(PLATA) AS PROSECNA_PLATA, SUM(DATUM_KRAJA - DATUM_POC) AS BROJ_RADNIH_DANA
FROM POZICIJA
WHERE DATUM_KRAJA IS NOT NULL
GROUP BY POZICIJA.NAZIV; 



SELECT ZAPOSLENI.IME, ZAPOSLENI.PREZIME
FROM ZAPOSLENI, POZICIJA
WHERE ZAPOSLENI.ID = POZICIJA.ZAPOSLENI_ID
AND POZICIJA.SEKTOR_ID IN
(SELECT SEKTOR.ID FROM
(SELECT POZICIJA.SEKTOR_ID, COUNT(POZICIJA.ZAPOSLENI_ID)
FROM POZICIJA
WHERE DATUM_KRAJA IS NULL
GROUP BY POZICIJA.SEKTOR_ID
HAVING COUNT(POZICIJA.ZAPOSLENI_ID) > 10))
MINUS
SELECT ZAPOSLENI.IME, ZAPOSLENI.PREZIME
FROM ZAPOSLENI, POZICIJA
WHERE POZICIJA.ZAPOSLENI_ID = ZAPOSLENI.ID AND DATUM_KRAJA IS NULL 
AND POZICIJA.NAZIV IN
(SELECT POZICIJA.NAZIV FROM
(SELECT POZICIJA.NAZIV, COUNT(*)
FROM POZICIJA
WHERE DATUM_KRAJA IS NOT NULL
GROUP BY POZICIJA.NAZIV
HAVING COUNT(*) > 3));

--ILI

SELECT ZAPOSLENI.IME, ZAPOSLENI.PREZIME
FROM SEKTOR, ZAPOSLENI, POZICIJA
WHERE SEKTOR.ID = POZICIJA.SEKTOR_ID AND POZICIJA.ZAPOSLENI_ID = ZAPOSLENI.ID AND DATUM_KRAJA IS NULL
AND SEKTOR.ID IN (SELECT ID FROM (SELECT SEKTOR.ID, COUNT(*)
FROM SEKTOR, ZAPOSLENI, POZICIJA
WHERE SEKTOR.ID = POZICIJA.SEKTOR_ID AND POZICIJA.ZAPOSLENI_ID = ZAPOSLENI.ID AND DATUM_KRAJA IS NULL
GROUP BY SEKTOR.ID
HAVING COUNT(*) > 10))
MINUS
SELECT ZAPOSLENI.IME, ZAPOSLENI.PREZIME
FROM SEKTOR, ZAPOSLENI, POZICIJA
WHERE SEKTOR.ID = POZICIJA.SEKTOR_ID AND POZICIJA.ZAPOSLENI_ID = ZAPOSLENI.ID AND DATUM_KRAJA IS NOT NULL
AND SEKTOR.ID IN(SELECT ID FROM (SELECT SEKTOR.ID, COUNT(*)
FROM SEKTOR, ZAPOSLENI, POZICIJA
WHERE SEKTOR.ID = POZICIJA.SEKTOR_ID AND POZICIJA.ZAPOSLENI_ID = ZAPOSLENI.ID AND DATUM_KRAJA IS NOT NULL
GROUP BY SEKTOR.ID
HAVING COUNT(*) > 3))



SELECT POZICIJA.NAZIV, COUNT(DISTINCT POZICIJA.ZAPOSLENI_ID)
FROM POZICIJA, SEKTOR
WHERE POZICIJA.SEKTOR_ID = SEKTOR.ID AND SEKTOR.LOKACIJA = 'Nis' AND DATUM_KRAJA IS NOT NULL
GROUP BY POZICIJA.NAZIV, SEKTOR_ID
HAVING COUNT(DISTINCT POZICIJA.ZAPOSLENI_ID) = 
(SELECT MAX(COUNT(DISTINCT POZICIJA.ZAPOSLENI_ID))
FROM POZICIJA, SEKTOR
WHERE POZICIJA.SEKTOR_ID = SEKTOR.ID AND SEKTOR.LOKACIJA = 'Nis' AND DATUM_KRAJA IS NOT NULL
GROUP BY POZICIJA.NAZIV, POZICIJA.SEKTOR_ID);

--ILI?

SELECT POZICIJA.NAZIV, COUNT(*)
FROM POZICIJA, SEKTOR
WHERE SEKTOR.ID = POZICIJA.SEKTOR_ID AND SEKTOR.LOKACIJA = 'Nis' AND DATUM_KRAJA IS NOT NULL
GROUP BY POZICIJA.NAZIV
HAVING COUNT(*) = (SELECT MAX(COUNT(*))
FROM POZICIJA, SEKTOR
WHERE SEKTOR.ID = POZICIJA.SEKTOR_ID AND SEKTOR.LOKACIJA = 'Nis' AND DATUM_KRAJA IS NOT NULL
GROUP BY POZICIJA.NAZIV)




INSERT INTO ZAPOSLENI VALUES(1, 'MIKA1', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(2, 'MIKA2', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(3, 'MIKA3', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(4, 'MIKA4', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(5, 'MIKA5', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(6, 'MIKA6', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(7, 'MIKA7', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(8, 'MIKA8', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(9, 'MIKA9', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(10, 'MIKA10', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(11, 'MIKA11', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(12, 'MIKA12', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(13, 'MIKA13', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(14, 'MIKA14', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(15, 'MIKA15', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(16, 'MIKA16', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(17, 'MIKA17', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(18, 'MIKA18', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(19, 'MIKA19', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(20, 'MIKA20', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(21, 'MIKA1A', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(22, 'MIKA1B', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(23, 'MIKA1C', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(24, 'MIKA1D', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(25, 'MIKA1E', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(26, 'MIKA1F', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(27, 'MIKA1G', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(28, 'MIKA1H', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(29, 'MIKA1I', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(30, 'MIKA1J', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(31, 'MIKA1K', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(32, 'MIKA1L', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(33, 'MIKA1M', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(34, 'MIKA1N', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(35, 'MIKA1O', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(36, 'MIKA1P', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(37, 'MIKA1Q', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(38, 'MIKA1R', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(39, 'MIKA1S', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(40, 'MIKA1T', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(41, 'MIKA1U', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(42, 'MIKA1V', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(43, 'MIKA1W', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(44, 'MIKA1X', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(45, 'MIKA1Y', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(46, 'MIKA1Z', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(47, 'MIKA01', 'PERIC', NULL, NULL, NULL, 'SS');
INSERT INTO ZAPOSLENI VALUES(48, 'MIKA02', 'PERIC', NULL, NULL, NULL, 'SS');

--/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

--APRIL 23

CREATE TABLE VERZIJE
(
    ID INT PRIMARY KEY,
    ORIG_FAJL_ID INT REFERENCES VERZIJE(ID),
    NAZIV VARCHAR(50),
    DIR_ID INT REFERENCES DIREKTORIJUM(ID),
    PROG_ID INT REFERENCES PROGRAMER(ID),
    BROJ_LINIJA NUMBER
);

CREATE TABLE PROGRAMER
(
    ID INT PRIMARY KEY,
    IME VARCHAR(40),
    GOD_ROD DATE NOT NULL,
    POL CHAR CHECK(POL IN ('M', 'Z')),
    ADRESA VARCHAR(100),
    JEZIK VARCHAR(5) CHECK (JEZIK IN('PHP', 'JAVA', 'C#'))
);

CREATE TABLE DIREKTORIJUM
(
    ID INT PRIMARY KEY,
    ROD_DIR_ID INT REFERENCES DIREKTORIJUM(DIR_ID),
    NAZIV VARCHAR(50)
);

-- B 

SELECT V1.NAZIV, P.IME, COUNT(V2.ID)
FROM VERZIJE V1 LEFT JOIN VERZIJE V2 ON V1.ID = V2.ORIG_FAJL_ID
JOIN PROGRAMER P ON P.ID = V1.PROG_ID
WHERE (EXTRACT(YEAR FROM SYSDATE) - P.GOD_ROD) > 30 AND V1.ORIG_FAJL_ID IS NULL
GROUP BY V1.ID, V1.NAZIV, P.IME;

--C

SELECT DISTINCT D.NAZIV
FROM DIREKTORIJUM D JOIN VERZIJE V ON V.DIR_ID = D.ID
WHERE ROD_DIR_ID IS NOT NULL AND V.ORIG_FAJL_ID IS NOT NULL
GROUP BY D.ID, D.NAZIV
HAVING COUNT(V.ID) = 2
MINUS
SELECT DISTINCT D.NAZIV
FROM DIREKTORIJUM D JOIN VERZIJE V ON V.DIR_ID = D.ID
WHERE V.ORIG_FAJL_ID IS NULL;

--D

SELECT D.NAZIV, COUNT(V.ID)
FROM DIREKTORIJUM D JOIN VERZIJE V ON V.DIR_ID = D.ID
WHERE V.ORIG_FAJL_ID IS NOT NULL AND D.ROD_DIR_ID IS NULL
GROUP BY D.ID, D.NAZIV; 

----DBMS

CREATE TABLE VERZIJE
(
    ID INT PRIMARY KEY,
    ORIG_FAJL_ID INT REFERENCES VERZIJE(ID),
    NAZIV VARCHAR(50),
    DIR_ID INT REFERENCES DIREKTORIJUM(ID),
    PROG_ID INT REFERENCES PROGRAMER(ID),
    BROJ_LINIJA NUMBER
);
CREATE TABLE PROGRAMER
(
    ID INT PRIMARY KEY,
    IME VARCHAR(40),
    GOD_ROD NUMBER(4) NOT NULL,
    POL CHAR CHECK(POL IN ('M', 'Z')),
    ADRESA VARCHAR(100),
    JEZIK VARCHAR(5) CHECK (JEZIK IN('PHP', 'JAVA', 'C#'))
);
CREATE TABLE DIREKTORIJUM
(
    ID INT PRIMARY KEY,
    ROD_DIR_ID INT REFERENCES DIREKTORIJUM(ID),
    NAZIV VARCHAR(50)
);

INSERT INTO PROGRAMER (ID, IME, GOD_ROD, POL, ADRESA, JEZIK) VALUES (1, 'Zdravko', 1990, 'M', 'VARDARSKA 1', 'PHP');
INSERT INTO PROGRAMER VALUES (2, 'Marica', 2003, 'Z', 'MILOSA_OBILICA_2', 'C#');
INSERT INTO PROGRAMER VALUES (3, 'Dalibor', 1978, 'M', 'PALIGORICA_23', 'C#');

INSERT INTO DIREKTORIJUM VALUES (1, NULL, 'DIR1');
INSERT INTO DIREKTORIJUM VALUES (2, 1, 'DIR21');
INSERT INTO DIREKTORIJUM VALUES (3, NULL, 'DIR3');
INSERT INTO DIREKTORIJUM VALUES (4, 1, 'DIR41');
INSERT INTO DIREKTORIJUM VALUES (5, 2, 'DIR521');
INSERT INTO DIREKTORIJUM VALUES (6, 4, 'DIR641');

INSERT INTO VERZIJE VALUES (1, NULL, 'ORIG1', 1, 1, 90);
INSERT INTO VERZIJE VALUES (2, 1, 'VER11', 1, 1, 100);
INSERT INTO VERZIJE VALUES (3, 1, 'VER12', 2, 2, 76);
INSERT INTO VERZIJE VALUES (4, 1, 'VER13', 3, 2, 90);
INSERT INTO VERZIJE VALUES (5, NULL, 'ORIG2', 3, 2, 30);
INSERT INTO VERZIJE VALUES (6, 5, 'VER21', 5, 1, 101);
INSERT INTO VERZIJE VALUES (7, 5, 'VER22', 1, 3, 4);
INSERT INTO VERZIJE VALUES (8, NULL, 'ORIG3', 3, 3, 200);
INSERT INTO VERZIJE VALUES (9, 8, 'VER31', 2, 3, 300);
INSERT INTO VERZIJE VALUES (10, 5, 'VER23', 5, 1, 240);

SELECT V1.NAZIV, P.IME, COUNT(V2.ID)
FROM VERZIJE V1 LEFT JOIN VERZIJE V2 ON V1.ID = V2.ORIG_FAJL_ID
JOIN PROGRAMER P ON P.ID = V1.PROG_ID
WHERE (EXTRACT(YEAR FROM SYSDATE) - P.GOD_ROD) > 30 AND V1.ORIG_FAJL_ID IS NULL
GROUP BY V1.ID, V1.NAZIV, P.IME;

SELECT DISTINCT D.NAZIV
FROM DIREKTORIJUM D JOIN VERZIJE V ON V.DIR_ID = D.ID
WHERE ROD_DIR_ID IS NOT NULL AND V.ORIG_FAJL_ID IS NOT NULL
GROUP BY D.ID, D.NAZIV
HAVING COUNT(V.ID) = 2
MINUS
SELECT DISTINCT D.NAZIV
FROM DIREKTORIJUM D JOIN VERZIJE V ON V.DIR_ID = D.ID
WHERE V.ORIG_FAJL_ID IS NULL;

SELECT D.NAZIV, COUNT(V.ID)
FROM DIREKTORIJUM D JOIN VERZIJE V ON V.DIR_ID = D.ID
WHERE V.ORIG_FAJL_ID IS NOT NULL AND D.ROD_DIR_ID IS NULL
GROUP BY D.ID, D.NAZIV;





---------------------------------------------------------------------------------------------------

--JAN23

--B

SELECT KOMPANIJA.NAZIV, KOMPANIJA.DRZAVA, SUM(KM)
FROM KOMPANIJA, VOZILO
WHERE KOMPANIJA.PIB = VOZILO.PIBFIR 
AND KOMPANIJA PIB IN
(SELECT KOMPANIJA.PIB FROM
(SELECT KOMPANIJA.PIB, COUNT(VOZILO.ID)
FROM KOMPANIJA, VOZILO
WHERE KOMPANIJA.PIB = VOZILO.PIBFIR
GROUP BY KOMPANIJA.PIB
HAVING COUNT(VOZILO.ID) > 2))
GROUP BY KOMPANIJA.NAZIV, KOMPANIJA.DRZAVA;

--C

SELECT ZAPOSLENI.LIME || ' ' || ZAPOSLENI.PREZIME AS PUNO_IME
FROM ZAPOSLENI, VOZILO, PRATI
WHERE PRATI.JMBG =ZAPOSLENI.JMBG AND PRATI.IDVOZILA = VOZILO.ID AND DATUM_KRAJA IS NOT NULL AND VOZILO.PIBFIR IN
(SELECT VOZILO.PIBFIR FROM
(SELECT VOZILO.PIBFIR, COUNT(VOZILO.ID)
FROM VOZILO
GROUP BY VOZILO.PIBFIR
HAVING COUNT(VOZILO.ID) < 5))
MINUS
SELECT ZAPOSLENI.LIME || ' ' || ZAPOSLENI.PREZIME AS PUNO_IME
FROM ZAPOSLENI, VOZILO, PRATI
WHERE PRATI.JMBG =ZAPOSLENI.JMBG AND PRATI.IDVOZILA = VOZILO.ID 
AND DATUM_KRAJA IS NOT NULL AND VOZILO.GORIVO = 'DIZEL' 
AND VOZILO.KM > 100000;

--D

SELECT KOMPANIJA.NAZIV, COUNT(VOZILO.ID)
FROM KOMPANIJA JOIN VOZILO ON KOMPANIJA.PIB = VOZILO.PIBFIR JOIN PRATI ON PRATI.IDVOZILA = VOZILO.ID
WHERE DATUM_KRAJA IS NULL
GROUP BY KOMPANIJA.NAZIV
HAVING COUNT(VOZILO.ID)=(SELECT MIN(COUNT(*))
FROM VOZILO JOIN PRATI ON PRATI.IDVOZILA = VOZILO.ID
WHERE DATUM_KRAJA IS NULL
GROUP BY VOZILO.PIBFIR)


---------------------------------------------------------------------------

--DEC 22

CREATE TABLE SPORTISTA
(
    ID INT PRIMARY KEY,
    IME VARCHAR(50),
    PREZIME VARCHAR(50),
    BRTEL VARCHAR(10),
    GOD_ROD INT,
    GRAD VARCHAR(40)
);

CREATE TABLE KLUB
(
    ID INT PRIMARY KEY,
    NAZIV VARCHAR(20),
    LOKACIJA VARCHAR(40),
    GOD_OSN INT,
    SPORT VARCHAR(30)
);

CREATE TABLE CLANS
(
    ID INT PRIMARY KEY,
    IDS INT REFERENCES SPORTISTA(ID),
    IDK INT REFERENCES KLUB(ID),
    DATUM_OD DATE,
    DATUM_DO DATE,
    TIM VARCHAR(10) CHECK (TIM IN ('PRVI', 'SKOLA', 'MLADI'))
);


--b

SELECT KLUB.NAZIV || ' ' || KLUB.LOKACIJA AS NAZIV_LOKACIJA, KLUB.GODINA_OSNIVANJA
FROM KLUB
WHERE SPORT = 'Odbojka' AND (EXTRACT(YEAR FROM SYSDATE) - KLUB.GODINA_OSNIVANJA) > 20
ORDER BY KLUB.GODINA_OSNIVANJA DESC;

    

--C

SELECT SPORTISTA.IME, SPORTISTA.PREZIME, CLAN.TIM
FROM SPORTISTA JOIN CLAN ON SPORTISTA.ID = CLAN.ID_SPORTISTE JOIN KLUB ON KLUB.ID = CLAN.ID_KLUBA
WHERE (EXTRACT(YEAR FROM SYSDATE) - SPORTISTA.GOD_ROD) < 30 AND  DATUM_DO IS NULL AND KLUB.LOKACIJA <> SPORTISTA.GRAD;

--D

SELECT KLUB.NAZIV, KLUB.SPORT, COUNT(ID_SPORTISTE)
FROM KLUB JOIN CLAN ON CLAN.ID_KLUBA = KLUB.ID JOIN SPORTISTA ON SPORTISTA.ID = CLAN.ID_SPORTISTE
WHERE TIM = 'skola' AND (EXTRACT(YEAR FROM SYSDATE) - SPORTISTA.GOD_ROD) < 15
GROUP BY KLUB.NAZIV, KLUB.SPORT
HAVING COUNT(ID_SPORTISTE) = 
(
    SELECT MAX(COUNT(ID_SPORTISTE))
    FROM KLUB JOIN CLAN ON CLAN.ID_KLUBA = KLUB.ID JOIN SPORTISTA ON SPORTISTA.ID = CLAN.ID_SPORTISTE
    WHERE TIM = 'skola' AND (EXTRACT(YEAR FROM SYSDATE) - SPORTISTA.GOD_ROD) < 15
    GROUP BY KLUB.NAZIV, KLUB.SPORT
);

--E
SELECT DISTINCT K.NAZIV, K.LOKACIJA
FROM KLUB K JOIN CLANSPORT C ON K.ID = C.IDK JOIN SPORTISTA S ON S.ID = C.IDS
WHERE K.SPORT = 'VATERPOLO' AND C.TIM = 'MLADI' AND S.PLATA >
(
    SELECT AVG(PLATA)
    FROM SPORTISTA S JOIN CLANSPORT C ON C.IDS = S.ID
    WHERE K.ID = C.IDK AND C.TIM = 'PRVI' AND C.DATUM_DO IS NULL
    GROUP BY C.IDK
)
GROUP BY K.ID, K.NAZIV, K.LOKACIJA
HAVING COUNT(DISTINCT S.ID) >= 2
MINUS
SELECT DISTINCT K.NAZIV, K.LOKACIJA
FROM KLUB K
WHERE EXISTS (
    SELECT 1 
    FROM CLANSPORT C JOIN SPORTISTA S ON C.IDS = S.ID
    WHERE K.ID = C.IDK AND C.DATUM_DO IS NOT NULL AND K.SPORT = 'VATERPOLO' 
    AND S.GRAD = 'NOVI SAD' AND S.PLATA > 20000
)
;


CREATE TABLE SPORTISTA
(
    ID INT PRIMARY KEY,
    IME VARCHAR(50),
    PREZIME VARCHAR(50),
    BRTEL VARCHAR(10),
    GOD_ROD INT,
    GRAD VARCHAR(40)
);

CREATE TABLE KLUB
(
    ID INT PRIMARY KEY,
    NAZIV VARCHAR(20),
    LOKACIJA VARCHAR(40),
    GOD_OSN INT,
    SPORT VARCHAR(30)
);

CREATE TABLE CLANS
(
    ID INT PRIMARY KEY,
    IDS INT REFERENCES SPORTISTA(ID),
    IDK INT REFERENCES KLUB(ID),
    DATUM_OD DATE,
    DATUM_DO DATE,
    TIM VARCHAR(10) CHECK (TIM IN ('PRVI', 'SKOLA', 'MLADI'))
);

INSERT INTO KLUB VALUES (1, 'OBJ1', 'KRUSEVAC', 2000, 'ODBOJKA');
INSERT INTO KLUB VALUES (2, 'OBJ2', 'NIS', 2009, 'ODBOJKA');
INSERT INTO KLUB VALUES (3, 'OBJ3', 'BRUS', 1980, 'ODBOJKA');
INSERT INTO KLUB VALUES (4, 'VP1', 'INDJIJA', 1996, 'VATERPOLO');

INSERT INTO KLUB VALUES (1, 'ODB1', 'KRUSEVAC', 200, 'ODBJOKA');

DROP TABLE KLUB;

SELECT K.NAZIV || K.LOKACIJA, K.GOD_OSN
FROM KLUB K
WHERE K.SPORT = 'ODBJOKA' AND (EXTRACT(YEAR FROM SYSDATE) - K.GOD_OSN) > 30
ORDER BY K.GOD_OSN DESC;


SELECT S.IME, S.PREZIME, C.TIM
FROM SPORTISTA S, CLAN C, KLUB K
WHERE S.ID = C.IDS AND C.IDK = K.ID 
AND (EXTRACT(YEAR FROM SYSDATE) - S.GOD_ROD) < 30
AND DATUM_DO IS NULL
AND S.GRAD <> K.LOKACIJA;

SELECT K.ID, K.NAZIV, K.SPORT, COUNT(S.ID)
FROM KLUB K, CLANSPORT C, SPORTISTA S
WHERE K.ID = C.IDK AND C.IDS = S.ID AND C.TIM = 'SKOLA' AND (EXTRACT(YEAR FROM SYSDATE) - S.GOD_ROD) < 15
GROUP BY K.ID, K.NAZIV, K.SPORT
HAVING COUNT(C.IDS) = 
(
    SELECT MAX(COUNT(C.IDS))
    FROM CLANSPORT C, SPORTISTA S
    WHERE C.IDS = S.ID AND (EXTRACT(YEAR FROM SYSDATE) - S.GOD_ROD) < 15
    AND C.TIM = 'SKOLA'
    GROUP BY C.IDK
);



SELECT K.NAZIV || K.LOKACIJA, K.GOD_OSN, K.SPORT
FROM KLUB K
WHERE K.SPORT = 'ODBOJKA' AND (EXTRACT(YEAR FROM SYSDATE) - K.GOD_OSN) > 20
ORDER BY K.GOD_OSN DESC;

SELECT * FROM KLUB

INSERT INTO KLUB VALUES (5, 'VP2', 'LESKOVAC', 2007, 'FUDBAL');

SELECT S.IME, S.PREZIME, C.TIM
FROM SPORTISTA S, CLANSPORT C, KLUB K
WHERE S.ID = C.IDS AND C.IDK = K.ID 
AND (EXTRACT(YEAR FROM SYSDATE) - S.GOD_ROD) < 30
AND DATUM_DO IS NULL
AND S.GRAD <> K.LOKACIJA;

INSERT INTO SPORTISTA VALUES(1, 'DENIS', 'DARK', '1234', 1980, 'UZICE');
INSERT INTO SPORTISTA VALUES(2, 'MAGDALENA', 'ZURIK', '99923', 1978, 'KRUSEVAC');
INSERT INTO SPORTISTA VALUES(3, 'DANKA', 'MARIC', '8742', 2005, 'BEOGRAD');
INSERT INTO SPORTISTA VALUES(4, 'MILOS', 'PERIC', '1375', 2001, 'BRUS');

INSERT INTO SPORTISTA VALUES(5, 'ACA', 'DAL', '274', 2009, 'ALEKSANDROVAC');
INSERT INTO SPORTISTA VALUES(6, 'DAVID', 'SALIC', '39582', 2010, 'GAMZIGRAD');
INSERT INTO SPORTISTA VALUES(7, 'SASKA', 'MLADIC', '8572', 2009, 'CACAK');

INSERT INTO CLANSPORT VALUES (5, 5, 1, 2015, 2019, 'SKOLA');
INSERT INTO CLANSPORT VALUES (6, 6, 1, 2015, 2019, 'SKOLA');
INSERT INTO CLANSPORT VALUES (7, 7, 1, 2015, 2019, 'SKOLA');

INSERT INTO SPORTISTA VALUES(8, 'MILICA', 'DAMIC', '9485', 2013, 'BEOGRAD');
INSERT INTO SPORTISTA VALUES(9, 'MLADEN', 'PUNIC', '8475', 2012, 'SMEDEREVO');

INSERT INTO CLANSPORT VALUES (8, 8, 2, 2015, 2019, 'SKOLA');
INSERT INTO CLANSPORT VALUES (9, 9, 2, 2015, 2019, 'SKOLA');

INSERT INTO SPORTISTA VALUES(10, 'DAMJAN', 'PERI', '2322', 2007, 'KRALJEVO');
INSERT INTO SPORTISTA VALUES(11, 'DESANKA', 'LALIC', '3435', 2015, 'CACAK');
INSERT INTO SPORTISTA VALUES(12, 'MILOS', 'DARIC', '4743', 2011, 'BOR');

INSERT INTO CLANSPORT VALUES (10, 10, 3, 2015, 2019, 'SKOLA');
INSERT INTO CLANSPORT VALUES (11, 11, 3, 2015, 2019, 'SKOLA');
INSERT INTO CLANSPORT VALUES (12, 12, 3, 2015, 2019, 'SKOLA');

INSERT INTO SPORTISTA VALUES(13, 'PENELOPA', 'PENELOPIC', '3346', 2014, 'NIS');

INSERT INTO CLANSPORT VALUES (13, 13, 4, 2015, 2019, 'SKOLA');

INSERT INTO SPORTISTA VALUES(14, 'LANA', 'PERI', '234522', 2013, 'MLADENOVAC');
INSERT INTO SPORTISTA VALUES(15, 'PERA', 'BORIC', '344335', 2015, 'CACAK');
INSERT INTO SPORTISTA VALUES(16, 'SARA', 'DENDIC', '474643', 2011, 'BOR');

INSERT INTO CLANSPORT VALUES (14, 14, 5, 2015, 2019, 'SKOLA');
INSERT INTO CLANSPORT VALUES (15, 15, 5, 2015, 2019, 'SKOLA');
INSERT INTO CLANSPORT VALUES (16, 16, 5, 2015, 2019, 'SKOLA');


INSERT INTO CLANSPORT VALUES (1, 1, 2, 1997, 2004, 'PRVI');
INSERT INTO CLANSPORT VALUES (2, 2, 1, 1994, 2010, 'PRVI');
INSERT INTO CLANSPORT VALUES (3, 3, 3, 2018, NULL, 'PRVI');
INSERT INTO CLANSPORT VALUES (4, 4, 3, 2015, 2019, 'MLADI');




SELECT K.ID, K.NAZIV, K.SPORT, COUNT(S.ID)
FROM KLUB K, CLANSPORT C, SPORTISTA S
WHERE K.ID = C.IDK AND C.IDS = S.ID AND C.TIM = 'SKOLA' AND (EXTRACT(YEAR FROM SYSDATE) - S.GOD_ROD) < 15
GROUP BY K.ID, K.NAZIV, K.SPORT
HAVING COUNT(C.IDS) = 
(
    SELECT MAX(COUNT(C.IDS))
    FROM CLANSPORT C, SPORTISTA S
    WHERE C.IDS = S.ID AND (EXTRACT(YEAR FROM SYSDATE) - S.GOD_ROD) < 15
    AND C.TIM = 'SKOLA'
    GROUP BY C.IDK
);


INSERT INTO KLUB VALUES (8, 'VAT4', 'SUBOTICA', 2000, 'VATERPOLO');
INSERT INTO CLANSPORT VALUES (17, 1, 6, 2015, 2019, 'MLADI');
INSERT INTO CLANSPORT VALUES (18, 2, 6, 2015, 2019, 'MLADI');

INSERT INTO CLANSPORT VALUES (19, 3, 7, 2015, 2019, 'MLADI');

INSERT INTO CLANSPORT VALUES (20, 4, 8, 2015, 2019, 'MLADI');
INSERT INTO CLANSPORT VALUES (21, 5, 8, 2015, 2019, 'MLADI');
INSERT INTO CLANSPORT VALUES (22, 6, 8, 2015, 2019, 'MLADI');

INSERT INTO CLANSPORT VALUES (23, 7, 4, 2015, 2019, 'MLADI');
INSERT INTO CLANSPORT VALUES (24, 8, 4, 2015, 2019, 'MLADI');

UPDATE SPORTISTA SET PLATA = 20000 WHERE ID = 10; 

INSERT INTO CLANSPORT VALUES (33, 14, 8, 2015, 2019, 'PRVI');
INSERT INTO CLANSPORT VALUES (34, 15, 6, 2015, 2019, 'PRVI');
INSERT INTO CLANSPORT VALUES (35, 16, 6, 2015, 2019, 'PRVI');

UPDATE CLANSPORT SET DATUM_DO = NULL WHERE IDS = 1;
UPDATE CLANSPORT SET DATUM_DO = NULL WHERE IDS = 2;
UPDATE CLANSPORT SET DATUM_DO = NULL WHERE IDS = 3;
UPDATE CLANSPORT SET DATUM_DO = NULL WHERE IDS = 4;
UPDATE CLANSPORT SET DATUM_DO = NULL WHERE IDS = 5;
UPDATE CLANSPORT SET DATUM_DO = NULL WHERE IDS = 6;
UPDATE CLANSPORT SET DATUM_DO =NULL WHERE IDS = 7;
UPDATE CLANSPORT SET DATUM_DO =NULL WHERE IDS = 8;
UPDATE CLANSPORT SET DATUM_DO =NULL WHERE IDS = 9;
UPDATE CLANSPORT SET DATUM_DO =NULL WHERE IDS = 10;


SELECT DISTINCT K.NAZIV, K.LOKACIJA
FROM KLUB K JOIN CLANSPORT C ON K.ID = C.IDK JOIN SPORTISTA S ON S.ID = C.IDS
WHERE K.SPORT = 'VATERPOLO' AND C.TIM = 'MLADI' AND S.PLATA >
(
    SELECT AVG(PLATA)
    FROM SPORTISTA S JOIN CLANSPORT C ON C.IDS = S.ID
    WHERE K.ID = C.IDK AND C.TIM = 'PRVI' AND C.DATUM_DO IS NULL
    GROUP BY C.IDK
)
GROUP BY K.ID, K.NAZIV, K.LOKACIJA
HAVING COUNT(DISTINCT S.ID) >= 2
MINUS
SELECT DISTINCT K.NAZIV, K.LOKACIJA
FROM KLUB K
WHERE EXISTS (
    SELECT 1 
    FROM CLANSPORT C JOIN SPORTISTA S ON C.IDS = S.ID
    WHERE K.ID = C.IDK AND C.DATUM_DO IS NOT NULL AND K.SPORT = 'VATERPOLO' 
    AND S.GRAD = 'NOVI SAD' AND S.PLATA > 20000
);



----------------------------------------------------------------------------------------------

--kolokvijum p1 III grupa??

--a

CREATE TABLE BIBLIOTEKA(
    ID INT PRIMARY KEY,
    NAZIV VARHCAR(40)
);

CREATE TABLE KNJIGA(
    ISBN INT PRIMARY KEY,
    NASLOV VARCHAR(100),
    DATUM_OBJ DATE
);

CREATE TABLE KNJIGE_U_BIBLIOTECI(
    ID_BIBLIOTEKE INT REFERENCES BIBLIOTEKA(ID),
    ISBN_KNJIGE INT REFERENCES KNJIGA(ISBN),
    KOLICINA INT DEFAULT 1 CHECK(KOLICINA <= 100 AND KOLICINA >= 1),
    CONSTRAINT KNJ_U_B_PK PRIMARY KEY(ID_BIBLIOTEKE, ISBN_KNJIGE)
);

SELECT * FROM KNJIGA
WHERE EXTRACT(YEAR FROM DATUM_OBJ) < 1970;


SELECT ISBN,NASLOV, KOLICINA
FROM KNJIGA 
INNER JOIN KNJIGE_U_BIBLIOTECI ON KNJIGE.ISBN = KNJIGE_U_BIBLIOTECI.ISBN_KNJIGE
GROUP BY ISBN, NASLOV
ORDER BY SUM(KOLICINA);

SELECT DISTINCT BIBLIOTEKA.ID, BIBLIOTEKA.NAZIV 
FROM BIBLIOTEKA, KNJIGE_U_BIBLIOTECI
WHERE BIBLIOTEKA.ID = KNJIGE_U_BIBLIOTECI.ID_BIBLIOTEKE
AND NOT EXISTS 
(
    SELECT KNJIGA.ISBN
    FROM KNJIGA
    WHERE KNJIGA.NASLOV = 'Prokleta Avlija' AND KNJIGA.ISBN = KNJIGE_U_BIBLIOTECI.ISBN_KNJIGE;
);


SELECT DISTINCT BIBLIOTEKA.ID, BIBLIOTEKA.NAZIV 
FROM BIBLIOTEKA JOIN KNJIGE_U_BIBLIOTECI ON BIBLIOTEKA.ID = KNJIGE_U_BIBLIOTECI.ID_BIBLIOTEKE
WHERE KNJIGE_U_BIBLIOTECI.ISBN_KNJIGE IN
(
    SELECT KNJIGA.ISBN FROM KNJIGA WHERE NASLOV IN ('Cekajuci Godoa', 'Prokleta avlija');
);

---------------------------------------------------------

--grupa 1 2016

CREATE TABLE PREDMET(
    ID INT PRIMARY KEY,
    NAZIV VARCHAR(50) NOT NULL,
    TIP VARCHAR(10) CHECK (TIP IN ('slika', 'skulptura', 'nakit')),
    GODINA INT NOT NULL
    OPIS VARHCAR(100)
);

CREATE TABLE AUKCIJA(
    ID INT PRIMARY KEY,
    DATUM_OTVARANJA DATE NOT NULL,
    DATUM_ZATVARANJA DATE,
    NAZIV VARHCAR(50) NOT NULL,
    OPIS VARCHAR(100)
);

CREATE TABLE PREDMETI_NA_AUKCIJI(
    AUKCIJA_ID INT REFERENCES AUKCIJA(ID),
    PREDMET_ID INT REFERENCES PREDMET(ID),
    POCETNA_CENA NUMBER NOT NULL,
    KRAJNJA_CENA NUMBER NOT NULL
);


SELECT PREDMET.*, KRAJNJA_CENA - POCETKA_CENA AS ZARADA
FROM PREDMET JOIN PREDMETI_NA_AUKCIJI ON PREDMET.ID = PREDMETI_NA_AUKCIJI.PREDMET_ID
WHERE (KRAJNJA_CENA - POCETKA_CENA) < 100
ORDER BY ZARADA;

SELECT PREDMET.NAZIV, PNA.KRAJNJA_CENA - PNA.POCETKA_CENA AS ZARADA, AUKCIJA.NAZIV, AUKCIJA.OPIS
FROM PREDMETI_NA_AUKCIJI PNA, PREDMET, AUKCIJA
WHERE PNA.PREDMET_ID = PREDMET.ID AND PNA.AUKCIJA_ID = AUKCIJA.ID
AND PREDMET.TIP = 'slika'
ORDER BY AUKCIJA.DATUM_OTVARANJA DESC;

SELECT A.NAZIV, A.DATUM_OTVARANJA
FROM AUKCIJA A
WHERE AUKCIJA.ID IN
(
    SELECT AUKCIJA.ID
    FROM AUKCIJA, PREDMET, PREDMETI_NA_AUKCIJI
    WHERE AUKCIJA.ID = PREDMETI_NA_AUKCIJI.AUKCIJA_ID
    AND PREDMET.ID = PREDMETI_NA_AUKCIJI.PREDMET_ID
    AND PREDMET.TIP = 'slika' 
)
MINUS
SELECT A.NAZIV, A.DATUM_OTVARANJA
FROM AUKCIJA A
WHERE NOT EXISTS
(
    SELECT AUKCIJA_ID
    FROM PREDMETI_NA_AUKCIJI JOIN PREDMET
    ON PREDMET.ID = PREDMETI_NA_AUKCIJI.PREDMET_ID
    WHERE PREDMET.TIP = 'skulptura'
    AND PREDMETI_NA_AUKCIJI.AUKCIJA_ID = AUKCIJA.ID;
);

SELECT A.NAZIV, A.DATUM_OTVARANJA, SUM(PNA.KRAJNJA_CENA - PNA.POCETNA_CENA)
FROM AUKCIJA A, PREDMETI_NA_AUKCIJI PNA
WHERE A.ID IN 
(
    SELECT PNA.AUKCIJA_ID, COUNT(PREDMET_ID)
    FROM PREDMETI_NA_AUKCIJI
    GROUP BY AUKCIJA_ID
    HAVING COUNT(PREDMET_ID) = 
    (
        SELECT MAX(COUNT(PREDMET_ID))
        FROM PREDMETI_NA_AUKCIJI
        GROUP BY PREDMET_ID
    )
)
GROUP BY A.NAZIV, A.DATUM_OTVARANJA;


------------------------------------------------------------------------------------------

--jan 22

--1
SELECT K1.NAZIV, K2.NAZIV, F.DAT_PLACANJA
FROM FAKTURA JOIN KOMPANIJA K1 ON F.KOMP_SALJE = K1.ID JOIN KOMPANIJA K2 ON F.KOMP_PRIMA = K2.ID
WHERE (SYSDATE - F.DAT_KREIRANJA) <= 30 AND F.ID IN
(
    SELECT FAKTURA.ID
    FROM 
    (
        SELECT FAKT_ID, COUNT(STAVKA.ID)
        FROM STAVKA
        GROUP BY FAKT_ID
        HAVING COUNT(STAVKA.ID) >=3
    )
)
ORDER BY F.DAT_PLACANJA ASC;

--2

SELECT K1.NAZIV, K2.NAZIV
FROM FAKTURA F JOIN KOMPANIJA K1 ON F.KOMP_SALJE = K1.ID JOIN KOMPANIJA K2 ON K2.ID = F.KOMP_PRIMA
WHERE F.ID IN 
(
    SELECT FAKTURA.ID FROM
    (
        SELECT FAKT_ID, COUNT(STAVKA)
        FROM STAVKA
        WHERE (STAVKA.IZNOS + STAVKA.POREZ) > 50000
    )
)
AND F.ID NOT IN 
(
    SELECT FAKTURA.ID FROM
    (
        SELECT FAKT_ID
        FROM STAVKA
        WHERE STAVKA.POPUST > 10
    )
);

--3

SELECT KOMPANIJA.NAZIV, COUNT(*)
FROM KOMPANIJA JOIN FAKTURA ON FAKTURA.KOMP_PRIMA = KOMPANIJA.ID
WHERE (DAT_PLACANJA - SYSDATE) <=7
GROUP BY FAKTURA.KOMP_PRIMA, KOMPANIJA.NAZIV
HAVING COUNT(*) =
(
    SELECT MAX(BR_FAKT) FROM
    (
        SELECT COUNT(KOMP_PRIMA) AS BR_FAKT
        FROM FAKTURA
        WHERE (DAT_PLACANJA - SYSDATE) <=7
        GROUP BY KOMP_PRIMA
    )
)


----

SELECT K.NAZIV || K.LOKACIJA, K.GOD_OSN, K.SPORT
FROM KLUB K
WHERE K.SPORT = 'ODBOJKA' AND (EXTRACT(YEAR FROM SYSDATE) - K.GOD_OSN) > 20
ORDER BY K.GOD_OSN DESC;

SELECT * FROM KLUB

INSERT INTO KLUB VALUES (5, 'VP2', 'LESKOVAC', 2007, 'FUDBAL');

SELECT S.IME, S.PREZIME, C.TIM
FROM SPORTISTA S, CLANSPORT C, KLUB K
WHERE S.ID = C.IDS AND C.IDK = K.ID 
AND (EXTRACT(YEAR FROM SYSDATE) - S.GOD_ROD) < 30
AND DATUM_DO IS NULL
AND S.GRAD <> K.LOKACIJA;

INSERT INTO SPORTISTA VALUES(1, 'DENIS', 'DARK', '1234', 1980, 'UZICE');
INSERT INTO SPORTISTA VALUES(2, 'MAGDALENA', 'ZURIK', '99923', 1978, 'KRUSEVAC');
INSERT INTO SPORTISTA VALUES(3, 'DANKA', 'MARIC', '8742', 2005, 'BEOGRAD');
INSERT INTO SPORTISTA VALUES(4, 'MILOS', 'PERIC', '1375', 2001, 'BRUS');

INSERT INTO SPORTISTA VALUES(5, 'ACA', 'DAL', '274', 2009, 'ALEKSANDROVAC');
INSERT INTO SPORTISTA VALUES(6, 'DAVID', 'SALIC', '39582', 2010, 'GAMZIGRAD');
INSERT INTO SPORTISTA VALUES(7, 'SASKA', 'MLADIC', '8572', 2009, 'CACAK');

INSERT INTO CLANSPORT VALUES (5, 5, 1, 2015, 2019, 'SKOLA');
INSERT INTO CLANSPORT VALUES (6, 6, 1, 2015, 2019, 'SKOLA');
INSERT INTO CLANSPORT VALUES (7, 7, 1, 2015, 2019, 'SKOLA');

INSERT INTO SPORTISTA VALUES(8, 'MILICA', 'DAMIC', '9485', 2013, 'BEOGRAD');
INSERT INTO SPORTISTA VALUES(9, 'MLADEN', 'PUNIC', '8475', 2012, 'SMEDEREVO');

INSERT INTO CLANSPORT VALUES (8, 8, 2, 2015, 2019, 'SKOLA');
INSERT INTO CLANSPORT VALUES (9, 9, 2, 2015, 2019, 'SKOLA');

INSERT INTO SPORTISTA VALUES(10, 'DAMJAN', 'PERI', '2322', 2007, 'KRALJEVO');
INSERT INTO SPORTISTA VALUES(11, 'DESANKA', 'LALIC', '3435', 2015, 'CACAK');
INSERT INTO SPORTISTA VALUES(12, 'MILOS', 'DARIC', '4743', 2011, 'BOR');

INSERT INTO CLANSPORT VALUES (10, 10, 3, 2015, 2019, 'SKOLA');
INSERT INTO CLANSPORT VALUES (11, 11, 3, 2015, 2019, 'SKOLA');
INSERT INTO CLANSPORT VALUES (12, 12, 3, 2015, 2019, 'SKOLA');

INSERT INTO SPORTISTA VALUES(13, 'PENELOPA', 'PENELOPIC', '3346', 2014, 'NIS');

INSERT INTO CLANSPORT VALUES (13, 13, 4, 2015, 2019, 'SKOLA');

INSERT INTO SPORTISTA VALUES(14, 'LANA', 'PERI', '234522', 2013, 'MLADENOVAC');
INSERT INTO SPORTISTA VALUES(15, 'PERA', 'BORIC', '344335', 2015, 'CACAK');
INSERT INTO SPORTISTA VALUES(16, 'SARA', 'DENDIC', '474643', 2011, 'BOR');

INSERT INTO CLANSPORT VALUES (14, 14, 5, 2015, 2019, 'SKOLA');
INSERT INTO CLANSPORT VALUES (15, 15, 5, 2015, 2019, 'SKOLA');
INSERT INTO CLANSPORT VALUES (16, 16, 5, 2015, 2019, 'SKOLA');


INSERT INTO CLANSPORT VALUES (1, 1, 2, 1997, 2004, 'PRVI');
INSERT INTO CLANSPORT VALUES (2, 2, 1, 1994, 2010, 'PRVI');
INSERT INTO CLANSPORT VALUES (3, 3, 3, 2018, NULL, 'PRVI');
INSERT INTO CLANSPORT VALUES (4, 4, 3, 2015, 2019, 'MLADI');




SELECT K.NAZIV, K.SPORT
FROM KLUB K, CLANSPORT C
WHERE K.ID = C.IDK
GROUP BY K.NAZIV, K.SPORT
HAVING COUNT(C.IDS) = 
(
    SELECT MAX(COUNT(C.IDS))
    FROM CLANSPORT C, SPORTISTA S
    WHERE C.IDS = S.ID AND (EXTRACT(YEAR FROM SYSDATE) - S.GOD_ROD) < 15
    AND C.TIM = 'SKOLA'
    GROUP BY C.IDK
);

---

SELECT P.NAZIV, A.IME_I_PREZIME
FROM PUBLIKACIJA P JOIN AUTOR A ON P.AUTOR_ID = A.ID
WHERE P.GOD_PUBLIKOVANJA < 2000 AND P.CENA < 1000
ORDER BY P.BROJ_STR DESC;

SELECT A.IME_I_PREZIME, P.NAZIV
FROM AUTOR A JOIN PUBLIKACIJA P ON P.AUTOR_ID = A.ID
WHERE POL = 'Z' AND P.ID IN
(
    SELECT P.ID, pg.*
    FROM PUBLIKACIJA P, POGLAVLJE PG
    WHERE P.ID = PG.PUBLIKACIJA_ID
    order by p.id
    GROUP BY P.ID
    HAVING COUNT(PG.ID) >=2
)
ORDER by P.NAZIV DESC;

SELECT DISTINCT A.IME_I_PREZIME
FROM AUTOR A JOIN PUBLIKACIJA P ON P.AUTOR_ID = A.ID
WHERE POL = 'M' AND P.BROJ_STR > 100 AND EXISTS
(
    SELECT 1
    FROM PUBLIKACIJA P JOIN POGLAVLJE PG ON PG.PUBLIKACIJA_ID = P.ID
    WHERE P.AUTOR_ID = A.ID AND PG.BROJ_SLIKA > 40
)

SELECT P.NAZIV, PG1.ID, PG2.ID
FROM PUBLIKACIJA P JOIN POGLAVLJE PG1 ON PG1.PUBLIKACIJA_ID = P.ID JOIN POGLAVLJE PG2 ON PG1.ROD_POGL_ID = PG2.ID
GROUP BY P.ID, P.NAZIV,  PG1.ID, PG2.ID

---
SELECT P.NAZIV, A.IME_I_PREZIME
FROM PUBLIKACIJA P JOIN AUTOR A ON P.AUTOR_ID = A.ID
WHERE P.GOD_PUBLIKOVANJA < 2000 AND P.CENA < 1000
ORDER BY P.BROJ_STR DESC;

SELECT A.IME_I_PREZIME, P.NAZIV
FROM AUTOR A JOIN PUBLIKACIJA P ON P.AUTOR_ID = A.ID
WHERE POL = 'Z' AND P.ID IN
(
    SELECT P.ID, pg.*
    FROM PUBLIKACIJA P, POGLAVLJE PG
    WHERE P.ID = PG.PUBLIKACIJA_ID
    order by p.id
    GROUP BY P.ID
    HAVING COUNT(PG.ID) >=2
)
ORDER by P.NAZIV DESC;

SELECT DISTINCT A.IME_I_PREZIME
FROM AUTOR A JOIN PUBLIKACIJA P ON P.AUTOR_ID = A.ID
WHERE POL = 'M' AND P.BROJ_STR > 100 AND EXISTS
(
    SELECT 1
    FROM PUBLIKACIJA P JOIN POGLAVLJE PG ON PG.PUBLIKACIJA_ID = P.ID
    WHERE P.AUTOR_ID = A.ID AND PG.BROJ_SLIKA > 40
)

SELECT P.NAZIV, PG1.ID, PG2.ID
FROM PUBLIKACIJA P JOIN POGLAVLJE PG1 ON PG1.PUBLIKACIJA_ID = P.ID JOIN POGLAVLJE PG2 ON PG1.ROD_POGL_ID = PG2.ID
GROUP BY P.ID, P.NAZIV,  PG1.ID, PG2.ID

--------------------------------------------------
CREATE TABLE SEKTOR(
    ID NUMBER PRIMARY KEY,
    NAZIV VARCHAR(30),
    LOKACIJA VARCHAR(30) CHECK LOKACIJA IN ("Nis", "Novi Sad", "Kragujevac")
);

CREATE TABLE ZAPOSLENI(
    ID NUMBER PRIMARY KEY,
    IME VARCHAR(30),
    PREZIME VARCHAR(30),
    TELEFON VARCHAR(10),
    ADRESA VARCHAR(100),
    GOD_RODJENJA DATE,
    STRUCNA_SPREMA VARCHAR(20) NOT NULL
);

CREATE TABLE POZICIJA(
    ZAPOSLENI_ID NUMBER REFERENCES ZAPOSLENI(ID),
    SEKTOR_ID NUMBER REFERENCES SEKTOR(ID),
    DATUM_POC DATE,
    DATUM_KRAJA DATE DEFAULT NULL,
    NAZIV VARHCAR(30),
    PLATA NUMBER,
    CONSTRAINT POZICIJA_PK PRIMARY KEY (ZAPOSLENI_ID, SEKTOR_ID, DATUM_POC)
);



--JAN 23 OPET
SELECT K.NAZIV, K.DRZAVA, SUM(V.KM)
FROM KOMPANIJA K JOIN VOZILO V ON V.PIBFIR = K.PIB
GROUP BY K.NAZIV, K.DRZAVA
HAVING COUNT(V.ID) >= 2;

SELECT Z.LIME
FROM ZAPOSLENI Z JOIN PRATI P ON P.JMBG = Z.JMBG JOIN VOZILO V ON P.IDVOZILA = V.ID
WHERE P.DATUM_KRAJA IS NOT NULL AND V.PIBFIR IN
(
    SELECT V.PIBFIR
    FROM VOZILO V
    GROUP BY V.PIBFIR
    HAVING COUNT(V.ID) < 5
)
MINUS
SELECT Z.LIME
FROM ZAPOSLENI Z JOIN PRATI P ON P.JMBG = Z.JMBG JOIN VOZILO V ON V.ID = P.IDVOZILA
WHERE V.GORIVO = 'DIZEL' AND V.KM > 100000 AND P.DATUM_KRAJA IS NOT NULL;


SELECT K.NAZIV
FROM KOMPANIJA K JOIN VOZILO V ON V.PIBFIR = K.PIB JOIN PRATI P ON P.IDVOZILA = V.ID
WHERE P.DATUM_KRAJA IS NULL
GROUP BY K.NAZIV
HAVING COUNT(V.ID) =
(
    SELECT MIN(COUNT(V.ID))
    FROM VOZILO V JOIN PRATI P ON V.ID = P.IDVOZILA
    WHERE P.DATUM_KRAJA IS NULL
    GROUP BY V.PIBFIR
);


SELECT KOMPANIJA.NAZIV, COUNT(VOZILO.ID)
FROM KOMPANIJA JOIN VOZILO ON KOMPANIJA.PIB = VOZILO.PIBFIR JOIN PRATI ON PRATI.IDVOZILA = VOZILO.ID
WHERE DATUM_KRAJA IS NULL
GROUP BY KOMPANIJA.NAZIV
HAVING COUNT(VOZILO.ID)=(SELECT MIN(COUNT(*))
FROM VOZILO JOIN PRATI ON PRATI.IDVOZILA = VOZILO.ID
WHERE DATUM_KRAJA IS NULL
GROUP BY VOZILO.PIBFIR)

--JAN23

--B

SELECT KOMPANIJA.NAZIV, KOMPANIJA.DRZAVA, SUM(KM)
FROM KOMPANIJA, VOZILO
WHERE KOMPANIJA.PIB = VOZILO.PIBFIR 
AND KOMPANIJA PIB IN
(SELECT KOMPANIJA.PIB FROM
(SELECT KOMPANIJA.PIB, COUNT(VOZILO.ID)
FROM KOMPANIJA, VOZILO
WHERE KOMPANIJA.PIB = VOZILO.PIBFIR
GROUP BY KOMPANIJA.PIB
HAVING COUNT(VOZILO.ID) > 2))
GROUP BY KOMPANIJA.NAZIV, KOMPANIJA.DRZAVA;

--C

SELECT ZAPOSLENI.LIME || ' ' || ZAPOSLENI.PREZIME AS PUNO_IME
FROM ZAPOSLENI, VOZILO, PRATI
WHERE PRATI.JMBG =ZAPOSLENI.JMBG AND PRATI.IDVOZILA = VOZILO.ID AND DATUM_KRAJA IS NOT NULL AND VOZILO.PIBFIR IN
(SELECT VOZILO.PIBFIR FROM
(SELECT VOZILO.PIBFIR, COUNT(VOZILO.ID)
FROM VOZILO
GROUP BY VOZILO.PIBFIR
HAVING COUNT(VOZILO.ID) < 5))
MINUS
SELECT ZAPOSLENI.LIME || ' ' || ZAPOSLENI.PREZIME AS PUNO_IME
FROM ZAPOSLENI, VOZILO, PRATI
WHERE PRATI.JMBG =ZAPOSLENI.JMBG AND PRATI.IDVOZILA = VOZILO.ID 
AND DATUM_KRAJA IS NOT NULL AND VOZILO.GORIVO = 'DIZEL' 
AND VOZILO.KM > 100000;

--D

SELECT KOMPANIJA.NAZIV, COUNT(VOZILO.ID)
FROM KOMPANIJA JOIN VOZILO ON KOMPANIJA.PIB = VOZILO.PIBFIR JOIN PRATI ON PRATI.IDVOZILA = VOZILO.ID
WHERE DATUM_KRAJA IS NULL
GROUP BY KOMPANIJA.NAZIV
HAVING COUNT(VOZILO.ID)=(SELECT MIN(COUNT(*))
FROM VOZILO JOIN PRATI ON PRATI.IDVOZILA = VOZILO.ID
WHERE DATUM_KRAJA IS NULL
GROUP BY VOZILO.PIBFIR)




CREATE TABLE RADNO_MESTO
(
    IDK NUMBER(10) REFERENCES KOMPANIJA(IDK),
    ZJMBG NUMBER(10) REFERENCES ZAPOSLENI(JMBG),
    POZICIJA VARCHAR(50),
    DATUMOD DATE,
    DATUMDO DATE,
    CONSTRAINT RM_PK PRIMARY KEY (IDK, ZJMBG, POZICIJA, DATUMOD)
);

SELECT K.IMEK, K.PIB, COUNT(RM.ZJMBG)
FROM KOMPANIJA K JOIN RADNO_MESTO RM ON K.IDK = RM.IDK
WHERE K.GODINA_OSN < 2000
GROUP BY K.IDK, K.IMEK, K.PIB
ORDER BY COUNT(RM.ZJMBG) DESC;

SELECT Z.IME, Z.PREZIME
FROM ZAPOSLENI Z JOIN RADNO_MESTO RM ON Z.JMBG = RM.ZJMBG
GROUP BY RM.IDK, Z.IME, Z.PREZIME
HAVING COUNT(RM.POZICIJA) > 1
MINUS 
SELECT Z.IME, Z.PREZIME
FROM ZAPOSLENI Z JOIN RADNO_MESTO RM ON Z.JMBG = RM.ZJMBG
WHERE RM.POZICIJA = 'RUKOVODILAC SEKTORA';


SELECT K.NAZIV
FROM KOMPANIJA K JOIN RADNO_MESTO RM ON K.IDK = RM.IDK
WHERE DATUMDO IS NULL
GROUP BY K.IDK
HAVING COUNT(RM.ZJMBG) = 
(
    SELECT MAX(COUNT(RM.ZJMBG))
    FROM RADNO_MESTO RM
    WHERE DATUMDO IS NULL
    GROUP BY RM.IDK
)